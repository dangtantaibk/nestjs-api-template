version: '3.8' # Specify the docker-compose version

services:
  db:
    image: postgres:15-alpine # Use a specific version of postgres alpine for smaller size
    container_name: postgres_db_24h
    restart: always # Always restart the container if it stops
    environment:
      POSTGRES_USER: ${DB_USERNAME:-postgres} # Use environment variable or default
      POSTGRES_PASSWORD: ${DB_PASSWORD:-your_strong_password} # Use environment variable or default
      POSTGRES_DB: ${DB_DATABASE:-db_24h} # Use environment variable or default database name
    ports: # Mở lại cổng để kết nối từ local
      - "${DB_PORT:-5432}:5432"
    volumes:
      - postgres_data_24h:/var/lib/postgresql/data # Persist data using a named volume
    networks:
      - app_network

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin_24h
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@example.com} # Set your admin email
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin} # Set your admin password
      PGADMIN_LISTEN_PORT: 80 # pgAdmin listens on port 80 inside the container
    ports:
      - "${PGADMIN_PORT:-5050}:80" # Map host port (e.g., 5050) to pgAdmin container port 80
    volumes:
      - pgadmin_data_24h:/var/lib/pgadmin # Persist pgAdmin data
    networks:
      - app_network
    depends_on:
      - db # Wait for db to be ready (optional but good practice)

  # app: # Comment out hoặc xóa dịch vụ app
  #   build: . # Build the image from the Dockerfile in the current directory
  #   container_name: nestjs_app_24h
  #   restart: unless-stopped
  #   depends_on:
  #     - db # Wait for the db service to start first
  #   ports:
  #     - "${PORT:-3000}:3000" # Map host port (from env or default 3000) to container port 3000
  #   environment:
  #     DB_HOST: db # Use the service name 'db' as the hostname
  #     DB_PORT: 5432 # PostgreSQL port inside the docker network
  #     DB_USERNAME: ${DB_USERNAME:-postgres}
  #     DB_PASSWORD: ${DB_PASSWORD:-your_strong_password}
  #     DB_DATABASE: ${DB_DATABASE:-db_24h}
  #     PORT: ${PORT:-3000}
  #     # Add any other environment variables your application needs
  #   networks:
  #     - app_network

volumes:
  postgres_data_24h: # Define the named volume for data persistence
  pgadmin_data_24h: # Define volume for pgAdmin

networks:
  app_network: # Define the network for services to communicate
    driver: bridge
